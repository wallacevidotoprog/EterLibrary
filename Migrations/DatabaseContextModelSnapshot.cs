// <auto-generated />
using System;
using EterLibrary.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EterLibrary.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("EterLibrary.Domain.Entities.DbModels.AddressClienteDbModel", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CITY")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CREATE_AT")
                        .HasColumnType("TEXT");

                    b.Property<long?>("ID_CLIENT")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("NUMBER")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OBSERVACAO")
                        .HasColumnType("TEXT");

                    b.Property<string>("PLACE")
                        .HasColumnType("TEXT");

                    b.Property<string>("UF")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UPDATE_AT")
                        .HasColumnType("TEXT");

                    b.Property<string>("ZONE")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("ID_CLIENT");

                    b.ToTable("Address", (string)null);
                });

            modelBuilder.Entity("EterLibrary.Domain.Entities.DbModels.CategoryDbModal", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CREATE_AT")
                        .HasColumnType("TEXT");

                    b.Property<long?>("ID_USER")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NAME")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UPDATE_AT")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("ID_USER");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("EterLibrary.Domain.Entities.DbModels.ClientDbModel", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CPF")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CREATE_AT")
                        .HasColumnType("TEXT");

                    b.Property<string>("NOME")
                        .HasColumnType("TEXT");

                    b.Property<string>("RG")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UPDATE_AT")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Client", (string)null);
                });

            modelBuilder.Entity("EterLibrary.Domain.Entities.DbModels.ControlReqNotaDbModal", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("AUTHOR")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CREATE_AT")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DATA_ENVIO")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DATA_VENDA")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UPDATE_AT")
                        .HasColumnType("TEXT");

                    b.Property<long?>("VENDEDOR")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("AUTHOR");

                    b.HasIndex("VENDEDOR");

                    b.ToTable("ControlReqNota", (string)null);
                });

            modelBuilder.Entity("EterLibrary.Domain.Entities.DbModels.DeliveryMethodDbModal", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CREATE_AT")
                        .HasColumnType("TEXT");

                    b.Property<string>("NAME")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UPDATE_AT")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("DeliveryMethod", (string)null);
                });

            modelBuilder.Entity("EterLibrary.Domain.Entities.DbModels.ManipulationDbModel", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ATEN_LOJA")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ATEN_MANI")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CREATE_AT")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DATA")
                        .HasColumnType("TEXT");

                    b.Property<long?>("ID_CLIENTE")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ID_ENDERECO")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ID_FORMAPAGAMENTO")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ID_MODOENTREGA")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ID_SITUCAO")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OBSGERAL")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UPDATE_AT")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("VALORFINAL")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("ATEN_LOJA");

                    b.HasIndex("ID_CLIENTE");

                    b.HasIndex("ID_ENDERECO");

                    b.HasIndex("ID_FORMAPAGAMENTO");

                    b.HasIndex("ID_MODOENTREGA");

                    b.HasIndex("ID_SITUCAO");

                    b.ToTable("Manipulation", (string)null);
                });

            modelBuilder.Entity("EterLibrary.Domain.Entities.DbModels.MedControlDbModel", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CODIGO")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CREATE_AT")
                        .HasColumnType("TEXT");

                    b.Property<long?>("ID_ADDRESS")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ID_CLIENT")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ID_USER")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LOTE")
                        .HasColumnType("TEXT");

                    b.Property<string>("NAME_M")
                        .HasColumnType("TEXT");

                    b.Property<int>("QTD")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UPDATE_AT")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("VALIDADE")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("ID_ADDRESS");

                    b.HasIndex("ID_CLIENT");

                    b.HasIndex("ID_USER");

                    b.ToTable("MedControl", (string)null);
                });

            modelBuilder.Entity("EterLibrary.Domain.Entities.DbModels.MedManipulationDbModal", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CREATE_AT")
                        .HasColumnType("TEXT");

                    b.Property<long?>("ID_MANIPULADOS")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ManipulationID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NAME_M")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UPDATE_AT")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("ManipulationID");

                    b.ToTable("MedManipulation", (string)null);
                });

            modelBuilder.Entity("EterLibrary.Domain.Entities.DbModels.PaymentDbModal", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CREATE_AT")
                        .HasColumnType("TEXT");

                    b.Property<string>("NAME")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UPDATE_AT")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Payment", (string)null);
                });

            modelBuilder.Entity("EterLibrary.Domain.Entities.DbModels.PositionDbModel", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CREATE_AT")
                        .HasColumnType("TEXT");

                    b.Property<string>("NOME")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PERMISSION")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UPDATE_AT")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Position", (string)null);
                });

            modelBuilder.Entity("EterLibrary.Domain.Entities.DbModels.ProductValidadeDbModal", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CREATE_AT")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DATA_VALIDADE")
                        .HasColumnType("TEXT");

                    b.Property<long?>("ID_CATEGORIA")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ID_VALIDADE")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PRODUTO_CODIGO")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PRODUTO_DESCRICAO")
                        .HasColumnType("TEXT");

                    b.Property<int?>("QUANTIDADE")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UPDATE_AT")
                        .HasColumnType("TEXT");

                    b.Property<long?>("ValityID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("ID_CATEGORIA");

                    b.HasIndex("ValityID");

                    b.ToTable("ProductValidade", (string)null);
                });

            modelBuilder.Entity("EterLibrary.Domain.Entities.DbModels.ReqNotaDbModal", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("CQN_ID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CREATE_AT")
                        .HasColumnType("TEXT");

                    b.Property<string>("REQ")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UPDATE_AT")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("CQN_ID");

                    b.ToTable("ReqNota", (string)null);
                });

            modelBuilder.Entity("EterLibrary.Domain.Entities.DbModels.SituationDbModal", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CREATE_AT")
                        .HasColumnType("TEXT");

                    b.Property<string>("NAME")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UPDATE_AT")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Situation", (string)null);
                });

            modelBuilder.Entity("EterLibrary.Domain.Entities.DbModels.UserModel", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CREATE_AT")
                        .HasColumnType("TEXT");

                    b.Property<long?>("ID_FUNCAO")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ID_LOJA")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NOME")
                        .HasColumnType("TEXT");

                    b.Property<string>("PASS")
                        .HasColumnType("TEXT");

                    b.Property<bool>("STATUS")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UPDATE_AT")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("ID_FUNCAO");

                    b.ToTable("UserPossition", (string)null);
                });

            modelBuilder.Entity("EterLibrary.Domain.Entities.DbModels.ValityDbModal", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CREATE_AT")
                        .HasColumnType("TEXT");

                    b.Property<long?>("DATE")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ID_USER")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UPDATE_AT")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("ID_USER");

                    b.ToTable("Vality", (string)null);
                });

            modelBuilder.Entity("EterLibrary.Domain.Entities.DbModels.AddressClienteDbModel", b =>
                {
                    b.HasOne("EterLibrary.Domain.Entities.DbModels.ClientDbModel", "Client")
                        .WithMany("AddressCliente")
                        .HasForeignKey("ID_CLIENT");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("EterLibrary.Domain.Entities.DbModels.CategoryDbModal", b =>
                {
                    b.HasOne("EterLibrary.Domain.Entities.DbModels.UserModel", "UserModel")
                        .WithMany("Category")
                        .HasForeignKey("ID_USER");

                    b.Navigation("UserModel");
                });

            modelBuilder.Entity("EterLibrary.Domain.Entities.DbModels.ControlReqNotaDbModal", b =>
                {
                    b.HasOne("EterLibrary.Domain.Entities.DbModels.UserModel", "UserModel_a")
                        .WithMany("ControlReqNota_a")
                        .HasForeignKey("AUTHOR")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EterLibrary.Domain.Entities.DbModels.UserModel", "UserModel_v")
                        .WithMany("ControlReqNota_v")
                        .HasForeignKey("VENDEDOR");

                    b.Navigation("UserModel_a");

                    b.Navigation("UserModel_v");
                });

            modelBuilder.Entity("EterLibrary.Domain.Entities.DbModels.ManipulationDbModel", b =>
                {
                    b.HasOne("EterLibrary.Domain.Entities.DbModels.UserModel", "UserModel")
                        .WithMany("Manipulation")
                        .HasForeignKey("ATEN_LOJA");

                    b.HasOne("EterLibrary.Domain.Entities.DbModels.ClientDbModel", "Client")
                        .WithMany("Manipulation")
                        .HasForeignKey("ID_CLIENTE");

                    b.HasOne("EterLibrary.Domain.Entities.DbModels.AddressClienteDbModel", "AddressCliente")
                        .WithMany("Manipulation")
                        .HasForeignKey("ID_ENDERECO");

                    b.HasOne("EterLibrary.Domain.Entities.DbModels.PaymentDbModal", "Payment")
                        .WithMany("Manipulation")
                        .HasForeignKey("ID_FORMAPAGAMENTO");

                    b.HasOne("EterLibrary.Domain.Entities.DbModels.DeliveryMethodDbModal", "DeliveryMethod")
                        .WithMany("Manipulation")
                        .HasForeignKey("ID_MODOENTREGA");

                    b.HasOne("EterLibrary.Domain.Entities.DbModels.SituationDbModal", "Situation")
                        .WithMany("Manipulation")
                        .HasForeignKey("ID_SITUCAO");

                    b.Navigation("AddressCliente");

                    b.Navigation("Client");

                    b.Navigation("DeliveryMethod");

                    b.Navigation("Payment");

                    b.Navigation("Situation");

                    b.Navigation("UserModel");
                });

            modelBuilder.Entity("EterLibrary.Domain.Entities.DbModels.MedControlDbModel", b =>
                {
                    b.HasOne("EterLibrary.Domain.Entities.DbModels.AddressClienteDbModel", "AddressCliente")
                        .WithMany("MedControl")
                        .HasForeignKey("ID_ADDRESS");

                    b.HasOne("EterLibrary.Domain.Entities.DbModels.ClientDbModel", "ClientDbModel")
                        .WithMany("MedControl")
                        .HasForeignKey("ID_CLIENT");

                    b.HasOne("EterLibrary.Domain.Entities.DbModels.UserModel", "UserModel")
                        .WithMany("MedControl")
                        .HasForeignKey("ID_USER");

                    b.Navigation("AddressCliente");

                    b.Navigation("ClientDbModel");

                    b.Navigation("UserModel");
                });

            modelBuilder.Entity("EterLibrary.Domain.Entities.DbModels.MedManipulationDbModal", b =>
                {
                    b.HasOne("EterLibrary.Domain.Entities.DbModels.ManipulationDbModel", "Manipulation")
                        .WithMany()
                        .HasForeignKey("ManipulationID");

                    b.Navigation("Manipulation");
                });

            modelBuilder.Entity("EterLibrary.Domain.Entities.DbModels.ProductValidadeDbModal", b =>
                {
                    b.HasOne("EterLibrary.Domain.Entities.DbModels.CategoryDbModal", "Category")
                        .WithMany("ProductValidade")
                        .HasForeignKey("ID_CATEGORIA");

                    b.HasOne("EterLibrary.Domain.Entities.DbModels.ValityDbModal", "Vality")
                        .WithMany()
                        .HasForeignKey("ValityID");

                    b.Navigation("Category");

                    b.Navigation("Vality");
                });

            modelBuilder.Entity("EterLibrary.Domain.Entities.DbModels.ReqNotaDbModal", b =>
                {
                    b.HasOne("EterLibrary.Domain.Entities.DbModels.ControlReqNotaDbModal", "ControlReqNota")
                        .WithMany("ReqNota")
                        .HasForeignKey("CQN_ID");

                    b.Navigation("ControlReqNota");
                });

            modelBuilder.Entity("EterLibrary.Domain.Entities.DbModels.UserModel", b =>
                {
                    b.HasOne("EterLibrary.Domain.Entities.DbModels.PositionDbModel", "Position")
                        .WithMany("UserModel")
                        .HasForeignKey("ID_FUNCAO");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("EterLibrary.Domain.Entities.DbModels.ValityDbModal", b =>
                {
                    b.HasOne("EterLibrary.Domain.Entities.DbModels.UserModel", "UserModel")
                        .WithMany("Vality")
                        .HasForeignKey("ID_USER");

                    b.Navigation("UserModel");
                });

            modelBuilder.Entity("EterLibrary.Domain.Entities.DbModels.AddressClienteDbModel", b =>
                {
                    b.Navigation("Manipulation");

                    b.Navigation("MedControl");
                });

            modelBuilder.Entity("EterLibrary.Domain.Entities.DbModels.CategoryDbModal", b =>
                {
                    b.Navigation("ProductValidade");
                });

            modelBuilder.Entity("EterLibrary.Domain.Entities.DbModels.ClientDbModel", b =>
                {
                    b.Navigation("AddressCliente");

                    b.Navigation("Manipulation");

                    b.Navigation("MedControl");
                });

            modelBuilder.Entity("EterLibrary.Domain.Entities.DbModels.ControlReqNotaDbModal", b =>
                {
                    b.Navigation("ReqNota");
                });

            modelBuilder.Entity("EterLibrary.Domain.Entities.DbModels.DeliveryMethodDbModal", b =>
                {
                    b.Navigation("Manipulation");
                });

            modelBuilder.Entity("EterLibrary.Domain.Entities.DbModels.PaymentDbModal", b =>
                {
                    b.Navigation("Manipulation");
                });

            modelBuilder.Entity("EterLibrary.Domain.Entities.DbModels.PositionDbModel", b =>
                {
                    b.Navigation("UserModel");
                });

            modelBuilder.Entity("EterLibrary.Domain.Entities.DbModels.SituationDbModal", b =>
                {
                    b.Navigation("Manipulation");
                });

            modelBuilder.Entity("EterLibrary.Domain.Entities.DbModels.UserModel", b =>
                {
                    b.Navigation("Category");

                    b.Navigation("ControlReqNota_a");

                    b.Navigation("ControlReqNota_v");

                    b.Navigation("Manipulation");

                    b.Navigation("MedControl");

                    b.Navigation("Vality");
                });
#pragma warning restore 612, 618
        }
    }
}
